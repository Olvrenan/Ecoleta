import express from 'express';

const app = express();

/*
GET : Buscar uma ou mais informações no back-end 
POST: Criar uma nova informação no back-end 
PUT: Atualizar uma informação existente no back-end
DELETE: Remover uma informação do back-end

EXEMPLOS

POST: http://localhost:3333/users - criar um novo usuário
GET: http://localhost:3333/users - Listar um novo usuário
GET: http://localhost:3333/users/5 - Buscar dados do usuário com o ID 5

FUNÇÕES A CONSIDERAR

Request Param: Parâmetros que vem na própria tora que identificam um recurso 
Query Param: Parâmetros que vem na própria rota que geralmente opcionais para filtros, paginação 
Request Body: Parâmetros para a criação/ atualização de informações 
*/



app.use(express.json()); // express interpretar as requisições como JSON

const users = [
    'Renan',
    'Renata',
    'Elias',
    
];

app.get ('/users' , (request, response) => {
    const search = String (request.query.search);
    
    const filteredUsers = search ? users.filter(user => user.includes(search)) : users;

    return response.json(filteredUsers);
});

app.get ('/users/:id' , (request, response) => {
    const id = Number(request.params.id);

    const user = users[id];

    return response.json(user)
});


app.post ('/users' , (request, response) => {
    const data = request.body;

    const user = {
        name: data.name,
        email: data.email
    }
    console.log(data)
    return response.json(user)
});


app.listen(3333);